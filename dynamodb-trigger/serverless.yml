service: clean-arch-sls

frameworkVersion: "3"

useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:ListStreams # permiss√£o para ouvir esse evento
            - dynamodb:DescribeStream
          Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/RolesTable"

custom:
  dbReadCapacityUnits: 1
  dbWriteCapacityUnits: 1
  rolesTable: Roles
  usersTable: Users
  functionsDir: src/4-framework/functions
  serverless-offline:
    httpPort: 3333
  webpack:
    webpackConfig: "webpack.config.js"
    includeModules:
      forceInclude:
        # force include of your db drivers here
        - mysql2
    excludeFiles: src/4-framework/repositories/ids.json

resources:
  Resources:
    RolesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: RolesTable
        AttributeDefinitions:
          - AttributeName: profile
            AttributeType: S
        KeySchema:
          - AttributeName: profile
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: ${self:custom.dbReadCapacityUnits}
          WriteCapacityUnits: ${self:custom.dbWriteCapacityUnits}
        StreamSpecification:
          StreamViewType: NEW_IMAGE

plugins:
  - serverless-webpack
  - serverless-offline

functions:
  - ${file(${self:custom.functionsDir}/roles/roles.yml)}
  - ${file(${self:custom.functionsDir}/roleTrigger/roleTrigger.yml)}
